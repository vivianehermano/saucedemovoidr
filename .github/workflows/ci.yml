name: E2E Testes Automatizados - Sauce Demo

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    # Executa todos os dias às 6:00 UTC
    - cron: '0 6 * * *'

env:
  NODE_VERSION: '20'
  CI: true

jobs:
  # Job para verificar se o site está acessível
  health-check:
    name: Verificar Disponibilidade do Site
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Verificar se saucedemo.com está acessível
        run: |
          echo "Verificando se o site está acessível..."
          curl -f -s -o /dev/null https://www.saucedemo.com || exit 1
          echo "Site acessível!"

  # Job principal de testes
  test:
    name: Testes E2E
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: health-check

    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - name: 'smoke'
            command: 'test:smoke'
            browser: 'chrome'
          - name: 'critico'
            command: 'test:critico'
            browser: 'chrome'
          - name: 'seguranca'
            command: 'test:seguranca'
            browser: 'chrome'
          - name: 'funcional'
            command: 'test:funcional'
            browser: 'firefox'
          - name: 'regressao'
            command: 'test:regressao'
            browser: 'chrome'

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache das dependências
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependências
        run: npm ci

      - name: Instalar browsers Playwright
        run: npx playwright install --with-deps

      - name: Executar linting
        run: npm run lint

      - name: Verificar formatação
        run: npm run format:check

      - name: Executar testes - ${{ matrix.test-suite.name }}
        run: npm run ${{ matrix.test-suite.command }} -- --project=${{ matrix.test-suite.browser }}
        env:
          CI: true

      - name: Upload dos resultados - ${{ matrix.test-suite.name }}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.test-suite.name }}-${{ github.run_number }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Upload screenshots (apenas em falhas)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.test-suite.name }}-${{ github.run_number }}
          path: |
            screenshots/
            videos/
          retention-days: 7

  # Job para executar testes completos
  test-complete:
    name: Testes Completos
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: health-check
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache das dependências
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Instalar dependências
        run: npm ci

      - name: Instalar browsers Playwright (todos)
        run: npx playwright install --with-deps

      - name: Executar linting
        run: npm run lint

      - name: Executar todos os testes
        run: npm run test:ci
        env:
          CI: true

      - name: Upload dos resultados completos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: complete-test-results-${{ github.run_number }}
          path: |
            playwright-report/
            test-results/
            relatorios/
          retention-days: 60

  # Job para validação rápida em PRs
  quick-validation:
    name: Validação Rápida
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: health-check
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Instalar browser chrome
        run: npx playwright install chrome --with-deps

      - name: Executar linting
        run: npm run lint

      - name: Verificar formatação
        run: npm run format:check

      - name: Executar testes críticos
        run: npm run test:critico -- --project=chrome
        env:
          CI: true

      - name: Executar smoke tests
        run: npm run test:smoke -- --project=chrome
        env:
          CI: true

  # Job para notificação em caso de falha
  notify:
    name: Notificação
    runs-on: ubuntu-latest
    needs: [test, test-complete, quick-validation]
    if: always() && (needs.test.result == 'failure' || needs.test-complete.result == 'failure' || needs.quick-validation.result == 'failure')
    steps:
      - name: Notificar falha
        run: |
          echo "Alguns testes falharam!"
          echo "Verifique os artefatos e logs para mais detalhes."
          echo "Run ID: ${{ github.run_id }}"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
